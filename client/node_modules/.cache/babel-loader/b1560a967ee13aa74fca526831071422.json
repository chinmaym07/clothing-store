{"ast":null,"code":"import ShopActionTypes from'./shop.types';export var fetchCollectionsStart=function fetchCollectionsStart(){return{type:ShopActionTypes.FETCH_COLLECTIONS_START};};export var fetchCollectionsSuccess=function fetchCollectionsSuccess(collectionsMap){return{type:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,payload:collectionsMap};};export var fetchCollectionsFailure=function fetchCollectionsFailure(errorMessage){return{type:ShopActionTypes.FETCH_COLLECTIONS_FAILURE,payload:errorMessage};};/* export const fetchCollectionsStartAsync = ()=> {\n\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n\n        dispatch(fetchCollectionsStart());\n        \n        collectionRef.get().then(snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n    }\n} */","map":{"version":3,"sources":["/home/skynet/react-practise/crown-clothing/client/src/redux/shop/shop.action.js"],"names":["ShopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA,MAAOA,CAAAA,eAAP,KAA4B,cAA5B,CAGA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,SAAM,CACvCC,IAAI,CAACF,eAAe,CAACG,uBADkB,CAAN,EAA9B,CAIP,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,cAAD,QAAoB,CACvDH,IAAI,CAACF,eAAe,CAACM,yBADkC,CAEvDC,OAAO,CAACF,cAF+C,CAApB,EAAhC,CAKP,MAAO,IAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,YAAD,QAAkB,CACrDP,IAAI,CAACF,eAAe,CAACU,yBADgC,CAErDH,OAAO,CAACE,YAF6C,CAAlB,EAAhC,CAKP","sourcesContent":["import ShopActionTypes from './shop.types';\n\n\nexport const fetchCollectionsStart = () =>({\n    type:ShopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) =>({\n    type:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload:collectionsMap\n});\n\nexport const fetchCollectionsFailure = (errorMessage) =>({\n    type:ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload:errorMessage\n});\n\n/* export const fetchCollectionsStartAsync = ()=> {\n\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n\n        dispatch(fetchCollectionsStart());\n        \n        collectionRef.get().then(snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n    }\n} */"]},"metadata":{},"sourceType":"module"}