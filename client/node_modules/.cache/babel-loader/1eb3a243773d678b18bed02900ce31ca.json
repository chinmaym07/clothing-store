{"ast":null,"code":"var _jsxFileName = \"/home/skynet/react-practise/crown-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React from 'react';\nimport { googleSignInStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { SignInContainer, ButtonsContainer, TitleContainer } from './sign-in.styles';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(SignInContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TitleContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"Sign In with email & password \"), /*#__PURE__*/React.createElement(\"form\", {\n      action: \"\",\n      method: \"post\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      id: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      required: true,\n      label: \"Email\",\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      value: this.state.password,\n      required: true,\n      label: \"Password\",\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ButtonsContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, \"SIGN IN\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: () => googleSignInStart(),\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, \"Sign In With Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/skynet/react-practise/crown-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","googleSignInStart","FormInput","CustomButton","auth","connect","SignInContainer","ButtonsContainer","TitleContainer","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","message","handleChange","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { googleSignInStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth} from '../../firebase/firebase.utils';\nimport {connect} from 'react-redux';\nimport {\n    SignInContainer,\n    ButtonsContainer,\n    TitleContainer\n    } from './sign-in.styles';  \n\nclass SignIn extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state={\n            email:'',\n            password:''\n        }\n    }\n\n    handleSubmit= async (event) =>{\n        event.preventDefault();\n\n        const {email , password} = this.state;\n\n        try{\n            await auth.signInWithEmailAndPassword(email , password);\n            this.setState({email:'', password:''});\n        } catch(error)\n        {\n            console.log(error.message);\n        }\n        \n\n        \n    }\n\n    handleChange = (event) => {\n        \n        const {value , name} = event.target;\n        this.setState({[name] : value});\n        event.preventDefault();\n    }\n    render(){\n        const {googleSignInStart} = this.props;\n\n        return (\n            <SignInContainer>\n                <TitleContainer>I already have an account</TitleContainer>\n                <span>Sign In with email & password </span>\n                \n                <form action=\"\" method=\"post\" onSubmit={this.handleSubmit}>\n                    \n                    <FormInput type=\"email\" id=\"email\" name=\"email\"  value={this.state.email} required label=\"Email\" handleChange={this.handleChange} />\n                    <FormInput type=\"password\" name=\"password\" id=\"password\" value={this.state.password} required label=\"Password\" handleChange={this.handleChange}/>\n                    <ButtonsContainer>\n                        <CustomButton type=\"submit\">SIGN IN</CustomButton>\n                        <CustomButton type=\"button\" onClick={()=>googleSignInStart()} isGoogleSignIn >\n                            \n                            Sign In With Google\n                        </CustomButton>\n                    </ButtonsContainer>\n                </form>\n                \n            </SignInContainer>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch =>({\n    googleSignInStart:() => dispatch(googleSignInStart())\n})\nexport default connect(null , mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}