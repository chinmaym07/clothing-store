{"ast":null,"code":"import ShopActionTypes from './shop.types';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\n/* export const fetchCollectionsStartAsync = ()=> {\n\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n\n        dispatch(fetchCollectionsStart());\n        \n        collectionRef.get().then(snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n    }\n} */","map":{"version":3,"sources":["/home/skynet/react-practise/crown-clothing/client/src/redux/shop/shop.action.js"],"names":["ShopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAGA,OAAO,MAAMC,qBAAqB,GAAG,OAAM;AACvCC,EAAAA,IAAI,EAACF,eAAe,CAACG;AADkB,CAAN,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAoB;AACvDH,EAAAA,IAAI,EAACF,eAAe,CAACM,yBADkC;AAEvDC,EAAAA,OAAO,EAACF;AAF+C,CAApB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAkB;AACrDP,EAAAA,IAAI,EAACF,eAAe,CAACU,yBADgC;AAErDH,EAAAA,OAAO,EAACE;AAF6C,CAAlB,CAAhC;AAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ShopActionTypes from './shop.types';\n\n\nexport const fetchCollectionsStart = () =>({\n    type:ShopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) =>({\n    type:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload:collectionsMap\n});\n\nexport const fetchCollectionsFailure = (errorMessage) =>({\n    type:ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload:errorMessage\n});\n\n/* export const fetchCollectionsStartAsync = ()=> {\n\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n\n        dispatch(fetchCollectionsStart());\n        \n        collectionRef.get().then(snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n    }\n} */"]},"metadata":{},"sourceType":"module"}