{"ast":null,"code":"import { takeLatest, put, call, all } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { googleSignInSuccess, googleSignInFailure, emailSignInFailure, emailSignInSuccess } from \"./user.actions\";\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail(emailAndPassword) {\n  const {\n    email,\n    password\n  } = emailAndPassword;\n\n  try {\n    const user = yield auth.signInWithEmailAndPassword(email, password);\n    console.log(user); //yield put(emailSignInSuccess())\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart(emailAndPassword) {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail(emailAndPassword));\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart, emailAndPassword)]);\n}","map":{"version":3,"sources":["/home/skynet/react-practise/crown-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","call","all","userActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","emailSignInFailure","emailSignInSuccess","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","emailAndPassword","email","password","signInWithEmailAndPassword","console","log","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAA+BC,GAA/B,QAA0C,oBAA1C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAKA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAsEC,kBAAtE,QAA+F,gBAA/F;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAAvB;AACA,UAAMS,OAAO,GAAG,MAAMb,IAAI,CAACK,yBAAD,EAA6BM,IAA7B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMhB,GAAG,CAACO,mBAAmB,CAAC;AAACU,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAjB;AAAoB,SAAGF,YAAY,CAACG,IAAb;AAAvB,KAAD,CAApB,CAAT;AACD,GAND,CAOC,OAAOC,KAAP,EAAc;AACb,UAAMnB,GAAG,CAACQ,mBAAmB,CAACW,KAAD,CAApB,CAAT;AACD;AACF;AACD,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMrB,UAAU,CAACI,eAAe,CAACkB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACD;AAKD,OAAO,UAAUW,eAAV,CAA0BC,gBAA1B,EAA4C;AACjD,QAAM;AAACC,IAAAA,KAAD;AAASC,IAAAA;AAAT,MAAqBF,gBAA3B;;AACA,MAAG;AACD,UAAMX,IAAI,GAAG,MAAMR,IAAI,CAACsB,0BAAL,CAAgCF,KAAhC,EAAwCC,QAAxC,CAAnB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ,EAFC,CAGD;AACH,GAJC,CAIA,OAAMO,KAAN,EACF;AACE,UAAMnB,GAAG,CAACS,kBAAkB,CAACU,KAAD,CAAnB,CAAT;AACD;AACA;AACD,OAAO,UAAUU,kBAAV,CAA6BN,gBAA7B,EAA+C;AACpD,QAAMxB,UAAU,CAACI,eAAe,CAAC2B,mBAAjB,EAAsCR,eAAe,CAACC,gBAAD,CAArD,CAAhB;AACD;AAED,OAAO,UAAUQ,SAAV,GACP;AACI,QAAM7B,GAAG,CAAC,CAACD,IAAI,CAACmB,mBAAD,CAAL,EAA2BnB,IAAI,CAAC4B,kBAAD,EAAsBN,gBAAtB,CAA/B,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, call,all } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.types\";\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n} from \"../../firebase/firebase.utils\";\nimport { googleSignInSuccess, googleSignInFailure ,emailSignInFailure,emailSignInSuccess} from \"./user.actions\";\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument , user);\n    const userSnapshot = yield userRef.get();\n\n    yield put(googleSignInSuccess({id:userSnapshot.id,...userSnapshot.data()}));\n  }\n   catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\n\n\n\nexport function* signInWithEmail(emailAndPassword) {\n  const {email , password} = emailAndPassword;\n  try{\n    const user = yield auth.signInWithEmailAndPassword(email , password);\n    console.log(user);\n    //yield put(emailSignInSuccess())\n} catch(error)\n{\n  yield put(emailSignInFailure(error));\n}\n}\nexport function* onEmailSignInStart(emailAndPassword) {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail(emailAndPassword));\n}\n\nexport function* userSagas()\n{\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart , emailAndPassword)]);\n}\n"]},"metadata":{},"sourceType":"module"}