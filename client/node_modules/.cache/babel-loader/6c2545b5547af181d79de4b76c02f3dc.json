{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { fetchCollectionsStartAsync } from './shop.action';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.action';\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am Fired\");\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/skynet/react-practise/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","fetchCollectionsStartAsync","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","catch","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,0BAAT,QAA2C,eAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA0D,+BAA1D;AAEA,SACIC,uBADJ,EAEIC,uBAFJ,QAGO,eAHP;AAKA,OAAO,UAAUC,qBAAV,GACP;AACI,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AAGAD,EAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,UAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACX,uBAAuB,CAACU,cAAD,CAAxB,CAAR;AACH,GAHD,EAGGE,KAHH,CAGSC,KAAK,IAAIF,QAAQ,CAACV,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAH1B;AAIH;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAOpB,SAAS,CAACE,eAAe,CAACmB,uBAAjB,EAAyCd,qBAAzC,CAAhB;AAEH","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\nimport { fetchCollectionsStartAsync } from './shop.action';\nimport ShopActionTypes from './shop.types';\nimport { firestore ,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\n\nimport {\n    fetchCollectionsSuccess,\n    fetchCollectionsFailure\n} from './shop.action';\n\nexport function* fetchCollectionsAsync()\n{\n    yield console.log(\"I am Fired\");\n\n    const collectionRef = firestore.collection('collections');\n\n    \n    collectionRef.get().then(snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart(){\n    yield (takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync));\n    \n}"]},"metadata":{},"sourceType":"module"}