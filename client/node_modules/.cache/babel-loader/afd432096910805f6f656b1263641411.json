{"ast":null,"code":"import { takeLatest, put, call, all } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { clearCart } from '../cart/cart.actions';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess } from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure());\n  }\n}\nexport function* oncheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n    yield put(clearCart());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* signUp({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user, {\n      displayName\n    });\n    const userSnapshot = yield userRef.get();\n    yield put(signUpSuccess());\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/home/skynet/react-practise/crown-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","call","all","userActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","clearCart","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","UserActionTypes","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","oncheckUserSession","CHECK_USER_SESSION","signOut","onSignOutStart","SIGN_OUT_START","signUp","createUserWithEmailAndPassword","displayName","signUpFailure","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, call,all } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.types\";\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser\n} from \"../../firebase/firebase.utils\";\nimport {clearCart} from '../cart/cart.actions';\nimport { signInSuccess, signInFailure ,signOutSuccess,signOutFailure, signUpSuccess} from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\n\nexport function* getSnapshotFromUserAuth(userAuth)\n{\n  try{\n    const userRef = yield call(createUserProfileDocument , userAuth);\n    const userSnapshot = yield userRef.get();\n\n    yield put(signInSuccess({id:userSnapshot.id,...userSnapshot.data()}));\n  }catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  }catch (error) {\n    yield put(signInFailure(error));\n  }\n    \n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\n\n\n\nexport function* signInWithEmail({payload:{email , password}}) \n{\n  try\n  {\n    const { user }= yield auth.signInWithEmailAndPassword(email , password);\n    yield getSnapshotFromUserAuth(user);\n  }catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* isUserAuthenticated()\n{\n  try{\n    const userAuth = yield getCurrentUser();\n    if(!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  }catch(error)\n  {\n    yield put(signInFailure());\n  }\n  \n}\n\nexport function* oncheckUserSession(){\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION , isUserAuthenticated)\n}\n\nexport function* signOut()\n{\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n    yield put(clearCart());\n  }catch(error)\n  {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* signUp({payload:{email , password}}){\n  try{\n    const {user} = yield auth.createUserWithEmailAndPassword(email , password);\n    const userRef = yield call(createUserProfileDocument ,user , {displayName});\n    const userSnapshot = yield userRef.get();\n    yield put(signUpSuccess());\n    yield put(signInSuccess({id:userSnapshot.id,...userSnapshot.data()}));\n  }catch(error)\n  {\n    yield put(signUpFailure(error));\n  }\n\n}\n\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START,signUp)\n}\nexport function* userSagas()\n{\n    yield all([\n      call(onGoogleSignInStart),\n      call(onEmailSignInStart) ,\n      call(isUserAuthenticated),\n      call(onSignOutStart)\n    ]);\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}