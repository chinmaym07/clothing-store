{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItems) => accumulatedQuantity + cartItems.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedTotal, cartItems) => accumulatedTotal + cartItems.quantity * cartItems.price, 0));","map":{"version":3,"sources":["/home/skynet/react-practise/crown-clothing/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQuantity","quantity","selectCartTotal","accumulatedTotal","price"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAEzCE,IAAI,IAAIA,IAAI,CAACE,SAF4B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACI,MAF6B,CAAvC;AAIP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE9CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAuBL,SAAvB,KAAqCK,mBAAmB,GAAGL,SAAS,CAACM,QAAtF,EAAgG,CAAhG,CAFiC,CAA3C;AAIP,OAAO,MAAMC,eAAe,GAAGZ,cAAc,CACzC,CAACI,eAAD,CADyC,EAEzCC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACI,gBAAD,EAAoBR,SAApB,KAAkCQ,gBAAgB,GAAIR,SAAS,CAACM,QAAV,GAAqBN,SAAS,CAACS,KAAtG,EAA8G,CAA9G,CAF4B,CAAtC","sourcesContent":["import {createSelector} from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCart],\n    cart => cart.cartItems\n   );\n\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    cart => cart.hidden\n   );   \nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    cartItems => cartItems.reduce((accumulatedQuantity , cartItems) => accumulatedQuantity + cartItems.quantity, 0)\n);\nexport const selectCartTotal = createSelector(\n    [selectCartItems],\n    cartItems => cartItems.reduce((accumulatedTotal , cartItems) => accumulatedTotal + (cartItems.quantity * cartItems.price), 0)\n   );\n"]},"metadata":{},"sourceType":"module"}