{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBXQCC-miBfF27YuW48XIggDchuTRbF8Nw\",\n  authDomain: \"crown-db-ed4b7.firebaseapp.com\",\n  databaseURL: \"https://crown-db-ed4b7.firebaseio.com\",\n  projectId: \"crown-db-ed4b7\",\n  storageBucket: \"crown-db-ed4b7.appspot.com\",\n  messagingSenderId: \"304665701144\",\n  appId: \"1:304665701144:web:2e21e57862d2e8f3210c6d\",\n  measurementId: \"G-H1GNY53501\"\n};\nexport const createUserProfileDocument = async (userAuth, additonalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additonalData\n      });\n    } catch (error) {\n      console.log('error creating user ', error.message());\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const documentRef = firestore.collection(collectionKey);\n  const collectionSnapShot = await collectionRef.get();\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      id: doc.id,\n      routeName: encodeURI(title.toLowerCase()),\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport default firebase;","map":{"version":3,"sources":["/home/skynet/react-practise/crown-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additonalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","documentRef","collectionSnapShot","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","id","routeName","encodeURI","toLowerCase","reduce","accumulator","initializeApp","auth"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\nconst config = {\n    apiKey: \"AIzaSyBXQCC-miBfF27YuW48XIggDchuTRbF8Nw\",\n    authDomain: \"crown-db-ed4b7.firebaseapp.com\",\n    databaseURL: \"https://crown-db-ed4b7.firebaseio.com\",\n    projectId: \"crown-db-ed4b7\",\n    storageBucket: \"crown-db-ed4b7.appspot.com\",\n    messagingSenderId: \"304665701144\",\n    appId: \"1:304665701144:web:2e21e57862d2e8f3210c6d\",\n    measurementId: \"G-H1GNY53501\"\n\n};\n\nexport const createUserProfileDocument = async(userAuth , additonalData)=> {\n    if(!userAuth) return;\n    \n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const snapShot = await userRef.get();\n    \n    if(!snapShot.exists)\n    {\n        const {displayName , email} = userAuth;\n        const createdAt = new Date();\n\n        try{\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additonalData\n            })\n        }catch(error)\n        {\n            console.log('error creating user ',error.message());\n        }\n        \n    }\n    return userRef;\n};\n\n\nexport const addCollectionAndDocuments = async(collectionKey , objectsToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n    const documentRef = firestore.collection(collectionKey);\n    const collectionSnapShot = await collectionRef.get();\n    const batch = firestore.batch();\n\n    objectsToAdd.forEach(obj => {\n        const newDocRef = collectionRef.doc();\n        batch.set(newDocRef,obj);\n    });\n    return await batch.commit();\n}\n\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n    const transformedCollection = collections.docs.map(doc => {\n        const {title , items} = doc.data();\n        \n        return {\n            id:doc.id,\n            routeName:encodeURI(title.toLowerCase()),\n            title,\n            items\n        }\n    });\n    return transformedCollection.reduce((accumulator , collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;   \n    return accumulator;\n    },{});\n} \n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}