{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { fetchCollectionsStartAsync } from './shop.action';\nimport ShopActionTypes from './shop.types';\nimport { firebase } from '../../firebase/firebase.utils';\nimport { convertCollectionsSnapshotToMap } from './shop.action';\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am Fired\");\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/skynet/react-practise/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","fetchCollectionsStartAsync","ShopActionTypes","firebase","convertCollectionsSnapshotToMap","fetchCollectionsAsync","console","log","collectionRef","firestore","collection","get","then","snapshot","collectionsMap","dispatch","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,0BAAT,QAA2C,eAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,QAAR,QAAuB,+BAAvB;AACA,SAAQC,+BAAR,QAA8C,eAA9C;AAEA,OAAO,UAAUC,qBAAV,GACP;AACI,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB;AAGAF,EAAAA,aAAa,CAACG,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,UAAMC,cAAc,GAAGV,+BAA+B,CAACS,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACC,uBAAuB,CAACF,cAAD,CAAxB,CAAR;AACH,GAHD,EAGGG,KAHH,CAGSC,KAAK,IAAIH,QAAQ,CAACI,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAH1B;AAIH;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAOrB,SAAS,CAACE,eAAe,CAACoB,uBAAjB,EAAyCjB,qBAAzC,CAAhB;AAEH","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\nimport { fetchCollectionsStartAsync } from './shop.action';\nimport ShopActionTypes from './shop.types';\nimport {firebase} from '../../firebase/firebase.utils';\nimport {convertCollectionsSnapshotToMap} from './shop.action';\n\nexport function* fetchCollectionsAsync()\n{\n    yield console.log(\"I am Fired\");\n\n    const collectionRef = firestore.collection('collections');\n\n    \n    collectionRef.get().then(snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart(){\n    yield (takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync));\n    \n}"]},"metadata":{},"sourceType":"module"}