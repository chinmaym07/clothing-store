{"ast":null,"code":"var _jsxFileName = \"/home/skynet/react-practise/crown-clothing/src/pages/shop/shop.component.jsx\";\nimport { render } from '@testing-library/react';\nimport React from 'react';\nimport { connect, create } from 'react-redux';\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { UpdateCollections } from '../../redux/shop/shop.action';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CollectionsOverview, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 10\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(UpdateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/skynet/react-practise/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["render","React","connect","create","CollectionsOverview","firestore","convertCollectionsSnapshotToMap","UpdateCollections","WithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","updateCollections","props","collectionRef","collection","onSnapshot","snapshot","collectionMap","mapDispatchToProps","dispatch"],"mappings":";AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAkBC,MAAlB,QAA+B,aAA/B;AACA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,SAASC,SAAT,EAAqBC,+BAArB,QAA4D,+BAA5D;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC7B;AACJC,MAAAA,OAAO,EAAC;AADJ,KAD6B;AAAA,SAMrCC,uBANqC,GAMX,IANW;AAAA;;AAQrCC,EAAAA,iBAAiB,GACjB;AACE,UAAM;AAAEC,MAAAA;AAAF,QAAyB,KAAKC,KAApC;AACA,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,aAAa,GAAGf,+BAA+B,CAACc,QAAD,CAArD;AACEL,MAAAA,iBAAiB,CAACM,aAAD,CAAjB;AACH,KAHD;AAKD;;AAEDrB,EAAAA,MAAM,GAAG;AAEL,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADF;AAKH;;AA1BoC;;AA4BvC,MAAMsB,kBAAkB,GAAIC,QAAD,KAAe;AACxCR,EAAAA,iBAAiB,EAAEM,aAAa,IAAIE,QAAQ,CAAChB,iBAAiB,CAACc,aAAD,CAAlB;AADJ,CAAf,CAA3B;;AAIA,eAAenB,OAAO,CAAC,IAAD,EAAQoB,kBAAR,CAAP,CAAmCb,QAAnC,CAAf","sourcesContent":["import { render } from '@testing-library/react';\nimport React from 'react';\nimport {connect , create} from 'react-redux';\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component';\nimport { firestore , convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { UpdateCollections } from '../../redux/shop/shop.action';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nclass ShopPage extends React.Component {\n    state={\n      loading:true\n    }\n\n\n  unsubscribeFromSnapshot = null;\n  \n  componentDidMount()\n  {\n    const { updateCollections } =  this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n        updateCollections(collectionMap);\n    });\n\n  }\n\n  render() {\n\n      return (\n        <div className=\"shop-page\">\n         <CollectionsOverview />\n        </div>\n      );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollections: collectionMap => dispatch(UpdateCollections(collectionMap))\n});\n\nexport default connect(null , mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}