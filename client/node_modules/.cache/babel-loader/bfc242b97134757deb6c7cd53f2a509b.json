{"ast":null,"code":"import{createStore,applyMiddleware,compose}from'redux';import logger from'redux-logger';import rootReducer from'./root-reducer';import{persistStore}from'redux-persist';import{composeWithDevTools}from'redux-devtools-extension';import createSagaMiddleware from'redux-saga';import rootSaga from'./root-saga';var sagaMiddleware=createSagaMiddleware();var middlewares=[sagaMiddleware];if(process.env.NODE_ENV==='development'){middlewares.push(logger);}export var store=createStore(rootReducer,compose(applyMiddleware.apply(void 0,middlewares),window.devToolsExtension?window.devToolsExtension():function(f){return f;}));sagaMiddleware.run(rootSaga);export var persistor=persistStore(store);export default{store:store,persistor:persistor};","map":{"version":3,"sources":["/home/skynet/react-practise/crown-clothing/client/src/redux/store.js"],"names":["createStore","applyMiddleware","compose","logger","rootReducer","persistStore","composeWithDevTools","createSagaMiddleware","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","window","devToolsExtension","f","run","persistor"],"mappings":"AAAA,OAAQA,WAAR,CAAsBC,eAAtB,CAAwCC,OAAxC,KAAsD,OAAtD,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,OAASC,YAAT,KAA6B,eAA7B,CAEA,OAASC,mBAAT,KAAoC,0BAApC,CACA,MAAQC,CAAAA,oBAAR,KAAkC,YAAlC,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CAEA,GAAMC,CAAAA,cAAc,CAAGF,oBAAoB,EAA3C,CAEA,GAAMG,CAAAA,WAAW,CAAE,CAACD,cAAD,CAAnB,CAEA,GAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAA5B,CACA,CACIH,WAAW,CAACI,IAAZ,CAAiBX,MAAjB,EACH,CAED,MAAO,IAAMY,CAAAA,KAAK,CAAGf,WAAW,CAACI,WAAD,CAAcF,OAAO,CAC/CD,eAAe,MAAf,QAAmBS,WAAnB,CAD+C,CAE/CM,MAAM,CAACC,iBAAP,CAA2BD,MAAM,CAACC,iBAAP,EAA3B,CAAwD,SAAAC,CAAC,QAAIA,CAAAA,CAAJ,EAFV,CAArB,CAAzB,CAKPT,cAAc,CAACU,GAAf,CAAmBX,QAAnB,EAEA,MAAO,IAAMY,CAAAA,SAAS,CAAGf,YAAY,CAACU,KAAD,CAA9B,CAEP,cAAe,CAAEA,KAAK,CAALA,KAAF,CAAUK,SAAS,CAATA,SAAV,CAAf","sourcesContent":["import {createStore , applyMiddleware , compose} from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport { persistStore } from 'redux-persist';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport  createSagaMiddleware from 'redux-saga';\nimport rootSaga from './root-saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares =[sagaMiddleware];\n\nif(process.env.NODE_ENV === 'development')\n{\n    middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, compose(\n      applyMiddleware(...middlewares),\n      window.devToolsExtension ? window.devToolsExtension() : f => f\n    ));\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nexport default { store , persistor };"]},"metadata":{},"sourceType":"module"}