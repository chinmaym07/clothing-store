{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.action';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/home/skynet/react-practise/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAsBC,IAAtB,EAA6BC,GAA7B,EAAkCC,GAAlC,QAA4C,oBAA5C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA0D,+BAA1D;AAEA,SACIC,uBADJ,EAEIC,uBAFJ,QAGO,eAHP;AAKA,OAAO,UAAUC,qBAAV,GACP;AACI,MAAI;AACA,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACK,+BAAD,EAAmCM,QAAnC,CAAjC;AACA,UAAMV,GAAG,CAACK,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AAEH,GAND,CAMC,OAAMC,KAAN,EACD;AACI,UAAMb,GAAG,CAACM,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAOjB,UAAU,CAACI,eAAe,CAACc,uBAAjB,EAAyCT,qBAAzC,CAAjB;AAEH;AAGD,OAAO,UAAUU,SAAV,GACP;AACI,QAAMhB,GAAG,CAAC,CACNF,IAAI,CAACgB,qBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { takeLatest , call , put ,all} from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\n\nimport { firestore ,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\n\nimport {\n    fetchCollectionsSuccess,\n    fetchCollectionsFailure\n} from './shop.action';\n\nexport function* fetchCollectionsAsync()\n{\n    try {\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get()\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap , snapshot);\n        yield put(fetchCollectionsSuccess(collectionsMap));\n\n    }catch(error)\n    {\n        yield put(fetchCollectionsFailure(error.message));\n    }\n}\n\nexport function* fetchCollectionsStart(){\n    yield (takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync));\n    \n}\n\n\nexport function* shopSagas()\n{\n    yield all([\n        call(fetchCollectionsStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}