{"ast":null,"code":"import _defineProperty from\"/home/skynet/react-practise/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/skynet/react-practise/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/skynet/react-practise/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/skynet/react-practise/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/skynet/react-practise/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import CustomButton from'../custom-button/custom-button.component';import FormInput from'../form-input/form-input.component';import{SignUpContainer,TitleContainer}from'./sign-up.styles';import{connect}from'react-redux';import{signUpStart as _signUpStart}from'../../redux/user/user.actions';var SignUp=function SignUp(_ref){var signUpStart=_ref.signUpStart;var _useState=useState({displayName:'',email:'',password:'',confirmPassword:''}),_useState2=_slicedToArray(_useState,2),userCredentials=_useState2[0],setUserCredentials=_useState2[1];var displayName=userCredentials.displayName,email=userCredentials.email,password=userCredentials.password,confirmPassword=userCredentials.confirmPassword;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(!(password!==confirmPassword)){_context.next=4;break;}alert(\"Passwords Don't Match !\");return _context.abrupt(\"return\");case 4:signUpStart({email:email,password:password,displayName:displayName});case 5:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setUserCredentials(_objectSpread(_objectSpread({},userCredentials),{},_defineProperty({},name,value)));event.preventDefault();};return/*#__PURE__*/React.createElement(SignUpContainer,null,/*#__PURE__*/React.createElement(TitleContainer,null,\" I do not have a Account \"),/*#__PURE__*/React.createElement(\"span\",null,\"Sign up with your Email & Password \"),/*#__PURE__*/React.createElement(\"form\",{className:\"sign-up-form\",onSubmit:handleSubmit},/*#__PURE__*/React.createElement(FormInput,{type:\"text\",name:\"displayName\",value:displayName,onChange:handleChange,label:\"Name\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"email\",name:\"email\",value:email,onChange:handleChange,label:\"Email\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"password\",name:\"password\",value:password,onChange:handleChange,label:\"Password\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"password\",name:\"confirmPassword\",value:confirmPassword,onChange:handleChange,label:\"Confirm Password\",required:true}),/*#__PURE__*/React.createElement(CustomButton,{type:\"submit\"},\"SIGN UP\")));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{signUpStart:function signUpStart(userCredentials){return dispatch(_signUpStart(userCredentials));}};};export default connect(null,mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/skynet/react-practise/crown-clothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","CustomButton","FormInput","SignUpContainer","TitleContainer","connect","signUpStart","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"s0BAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,KAA6B,OAA7B,CAEA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CACA,OACIC,eADJ,CAEIC,cAFJ,KAGW,kBAHX,CAMA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,WAAW,GAAXA,CAAAA,YAAR,KAA0B,+BAA1B,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAmB,IAAjBD,CAAAA,WAAiB,MAAjBA,WAAiB,eAEiBN,QAAQ,CAAC,CACpDQ,WAAW,CAAC,EADwC,CAEpDC,KAAK,CAAC,EAF8C,CAGpDC,QAAQ,CAAC,EAH2C,CAIpDC,eAAe,CAAC,EAJoC,CAAD,CAFzB,wCAEvBC,eAFuB,eAELC,kBAFK,kBAQvBL,CAAAA,WARuB,CAQ6BI,eAR7B,CAQvBJ,WARuB,CAQTC,KARS,CAQ6BG,eAR7B,CAQTH,KARS,CAQDC,QARC,CAQ6BE,eAR7B,CAQDF,QARC,CAQUC,eARV,CAQ6BC,eAR7B,CAQUD,eARV,CAS9B,GAAMG,CAAAA,YAAY,2FAAG,iBAAMC,KAAN,kHACjBA,KAAK,CAACC,cAAN,GADiB,KAIdN,QAAQ,GAAKC,eAJC,0BAMbM,KAAK,CAAC,yBAAD,CAAL,CANa,wCASjBX,WAAW,CAAC,CAACG,KAAK,CAALA,KAAD,CAASC,QAAQ,CAARA,QAAT,CAAkBF,WAAW,CAAXA,WAAlB,CAAD,CAAX,CATiB,sDAAH,kBAAZM,CAAAA,YAAY,6CAAlB,CAYA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACH,KAAD,CACrB,mBAC2BA,KAAK,CAACI,MADjC,CACWC,IADX,eACWA,IADX,CACkBC,KADlB,eACkBA,KADlB,CAEIR,kBAAkB,gCAAKD,eAAL,wBAAsBQ,IAAtB,CAA4BC,KAA5B,GAAlB,CACAN,KAAK,CAACC,cAAN,GACH,CALD,CAOA,mBACI,oBAAC,eAAD,mBAEI,oBAAC,cAAD,kCAFJ,cAGI,sEAHJ,cAII,4BAAM,SAAS,CAAC,cAAhB,CAA+B,QAAQ,CAAEF,YAAzC,eACI,oBAAC,SAAD,EAAW,IAAI,CAAC,MAAhB,CAAuB,IAAI,CAAC,aAA5B,CAA0C,KAAK,CAAEN,WAAjD,CAA8D,QAAQ,CAAEU,YAAxE,CAAsF,KAAK,CAAC,MAA5F,CAAmG,QAAQ,KAA3G,EADJ,cAEI,oBAAC,SAAD,EAAW,IAAI,CAAC,OAAhB,CAAwB,IAAI,CAAC,OAA7B,CAAqC,KAAK,CAAET,KAA5C,CAAmD,QAAQ,CAAES,YAA7D,CAA2E,KAAK,CAAC,OAAjF,CAAyF,QAAQ,KAAjG,EAFJ,cAGI,oBAAC,SAAD,EAAW,IAAI,CAAC,UAAhB,CAA2B,IAAI,CAAC,UAAhC,CAA2C,KAAK,CAAER,QAAlD,CAA4D,QAAQ,CAAEQ,YAAtE,CAAoF,KAAK,CAAC,UAA1F,CAAqG,QAAQ,KAA7G,EAHJ,cAII,oBAAC,SAAD,EAAW,IAAI,CAAC,UAAhB,CAA2B,IAAI,CAAC,iBAAhC,CAAkD,KAAK,CAAEP,eAAzD,CAA0E,QAAQ,CAAEO,YAApF,CAAkG,KAAK,CAAC,kBAAxG,CAA2H,QAAQ,KAAnI,EAJJ,cAKI,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,YALJ,CAJJ,CADJ,CAgBH,CA5CD,CA8CA,GAAMI,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACpCjB,WAAW,CAAE,qBAACM,eAAD,QAAqBW,CAAAA,QAAQ,CAACjB,YAAW,CAACM,eAAD,CAAZ,CAA7B,EADuB,CAAL,EAAnC,CAGA,cAAeP,CAAAA,OAAO,CAAC,IAAD,CAAMiB,kBAAN,CAAP,CAAiCf,MAAjC,CAAf","sourcesContent":["import React,{useState} from 'react';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport {\n    SignUpContainer,\n    TitleContainer\n    } from './sign-up.styles';\n\n\nimport {connect} from 'react-redux';\nimport {signUpStart} from '../../redux/user/user.actions';\n\nconst SignUp = ({signUpStart}) => {\n    \n    const [userCredentials , setUserCredentials] = useState({\n        displayName:'',\n        email:'',\n        password:'',\n        confirmPassword:''   \n    });\n    const {displayName , email , password , confirmPassword} = userCredentials;\n    const handleSubmit = async(event) =>{\n        event.preventDefault();\n\n        \n        if(password !== confirmPassword)\n        {\n            alert(\"Passwords Don't Match !\");\n            return;\n        }\n        signUpStart({email , password,displayName});\n    }\n\n    const handleChange = (event) =>\n    {\n        const {name , value} = event.target;\n        setUserCredentials({...userCredentials,[name]:value});\n        event.preventDefault();\n    }\n\n    return (\n        <SignUpContainer>\n            \n            <TitleContainer> I do not have a Account </TitleContainer>\n            <span>Sign up with your Email & Password </span>\n            <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n                <FormInput type=\"text\" name=\"displayName\" value={displayName} onChange={handleChange} label=\"Name\" required/>\n                <FormInput type=\"email\" name=\"email\" value={email} onChange={handleChange} label=\"Email\" required/>\n                <FormInput type=\"password\" name=\"password\" value={password} onChange={handleChange} label=\"Password\" required/>\n                <FormInput type=\"password\" name=\"confirmPassword\" value={confirmPassword} onChange={handleChange} label=\"Confirm Password\" required/> \n                <CustomButton type=\"submit\">SIGN UP</CustomButton>\n\n            </form>\n\n        </SignUpContainer>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\n})\nexport default connect(null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}