{"ast":null,"code":"var _jsxFileName = \"/home/skynet/react-practise/crown-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport { SignUpContainer, TitleContainer } from './sign-up.styles';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const {\n    newUserCredentials,\n    setNewUserCredentials\n  } = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = newUserCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords Don't Match !\");\n      return;\n    }\n\n    signUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setNewUserCredentials({\n      newUserCredentials,\n      [name]: value\n    });\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(SignUpContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TitleContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \" I do not have a Account \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Sign up with your Email & Password \"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: this.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/skynet/react-practise/crown-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","CustomButton","FormInput","SignUpContainer","TitleContainer","connect","signUpStart","SignUp","newUserCredentials","setNewUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport {\n    SignUpContainer,\n    TitleContainer\n    } from './sign-up.styles';\n\n\nimport {connect} from 'react-redux';\nimport {signUpStart} from '../../redux/user/user.actions';\n\nconst SignUp = ({signUpStart}) => {\n    \n    const {newUserCredentials , setNewUserCredentials} = useState({\n        displayName:'',\n        email:'',\n        password:'',\n        confirmPassword:''   \n    });\n    const {displayName , email , password , confirmPassword} = newUserCredentials;\n    const handleSubmit = async(event) =>{\n        event.preventDefault();\n\n        \n        if(password !== confirmPassword)\n        {\n            alert(\"Passwords Don't Match !\");\n            return;\n        }\n        signUpStart({email , password,displayName});\n    }\n\n    const handleChange = (event) =>\n    {\n        const {name , value} = event.target;\n        setNewUserCredentials({newUserCredentials,[name]:value});\n        event.preventDefault();\n    }\n\n        return (\n            <SignUpContainer>\n                \n                <TitleContainer> I do not have a Account </TitleContainer>\n                <span>Sign up with your Email & Password </span>\n                <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n                    <FormInput type=\"text\" name=\"displayName\" value={displayName} onChange={handleChange} label=\"Name\" required/>\n                    <FormInput type=\"email\" name=\"email\" value={email} onChange={handleChange} label=\"Email\" required/>\n                    <FormInput type=\"password\" name=\"password\" value={password} onChange={handleChange} label=\"Password\" required/>\n                    <FormInput type=\"password\" name=\"confirmPassword\" value={confirmPassword} onChange={handleChange} label=\"Confirm Password\" required/> \n                    <CustomButton type=\"submit\">SIGN UP</CustomButton>\n\n                </form>\n\n            </SignUpContainer>\n        )\n    }\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\n})\nexport default connect(null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}