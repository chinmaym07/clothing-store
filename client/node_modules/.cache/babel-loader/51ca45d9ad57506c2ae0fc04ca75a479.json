{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBXQCC-miBfF27YuW48XIggDchuTRbF8Nw\",\n  authDomain: \"crown-db-ed4b7.firebaseapp.com\",\n  databaseURL: \"https://crown-db-ed4b7.firebaseio.com\",\n  projectId: \"crown-db-ed4b7\",\n  storageBucket: \"crown-db-ed4b7.appspot.com\",\n  messagingSenderId: \"304665701144\",\n  appId: \"1:304665701144:web:2e21e57862d2e8f3210c6d\",\n  measurementId: \"G-H1GNY53501\"\n};\nexport const createUserProfileDocument = async (userAuth, additonalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        name: displayName\n      });\n    } catch (error) {}\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/skynet/react-practise/crown-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additonalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","name","error","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAGA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,gCAFD;AAGXC,EAAAA,WAAW,EAAE,uCAHF;AAIXC,EAAAA,SAAS,EAAE,gBAJA;AAKXC,EAAAA,aAAa,EAAE,4BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAYA,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAiBC,aAAjB,KAAkC;AACvE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAT,EAAJ,EACA;AACI,UAAM;AAACC,MAAAA,WAAD;AAAeC,MAAAA;AAAf,QAAwBV,QAA9B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACC,YAAMV,OAAO,CAACW,GAAR,CAAY;AAACC,QAAAA,IAAI,EAAEL;AAAP,OAAZ,CAAN;AAGH,KAJD,CAIC,OAAMM,KAAN,EACD,CAEC;AAEJ;AAEJ,CAtBM;AAyBP1B,QAAQ,CAAC2B,aAAT,CAAuB1B,MAAvB;AAEA,OAAO,MAAM2B,IAAI,GAAG5B,QAAQ,CAAC4B,IAAT,EAAb;AACP,OAAO,MAAMd,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMe,QAAQ,GAAG,IAAI7B,QAAQ,CAAC4B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe7B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\nconst config = {\n    apiKey: \"AIzaSyBXQCC-miBfF27YuW48XIggDchuTRbF8Nw\",\n    authDomain: \"crown-db-ed4b7.firebaseapp.com\",\n    databaseURL: \"https://crown-db-ed4b7.firebaseio.com\",\n    projectId: \"crown-db-ed4b7\",\n    storageBucket: \"crown-db-ed4b7.appspot.com\",\n    messagingSenderId: \"304665701144\",\n    appId: \"1:304665701144:web:2e21e57862d2e8f3210c6d\",\n    measurementId: \"G-H1GNY53501\"\n\n};\n\nexport const createUserProfileDocument = async(userAuth , additonalData)=> {\n    if(!userAuth) return;\n    \n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const snapShot = await userRef.get();\n    \n    if(!snapShot.exists())\n    {\n        const {displayName , email} = userAuth;\n        const createdAt = new Date();\n\n        try{\n            await userRef.set({name: displayName})\n            \n\n        }catch(error)\n        {\n\n        }\n        \n    }\n    \n};\n\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt:'select_account'});\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}