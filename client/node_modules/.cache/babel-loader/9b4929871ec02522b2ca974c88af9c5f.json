{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { fetchCollectionsStartAsync } from './shop.action';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.action';\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am Fired\");\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n  } catch (error) {}\n  /* collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message))); */\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/skynet/react-practise/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","fetchCollectionsStartAsync","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAqBC,IAArB,EAA4BC,GAA5B,QAAuC,oBAAvC;AACA,SAASC,0BAAT,QAA2C,eAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA0D,+BAA1D;AAEA,SACIC,uBADJ,EAEIC,uBAFJ,QAGO,eAHP;AAKA,OAAO,UAAUC,qBAAV,GACP;AACI,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AACA,MAAI;AACA,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAACK,+BAAD,EAAmCQ,QAAnC,CAAjC;AACH,GAJD,CAIC,OAAMG,KAAN,EACD,CAEC;AAGD;;;;;AAIH;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAOlB,SAAS,CAACI,eAAe,CAACe,uBAAjB,EAAyCV,qBAAzC,CAAhB;AAEH","sourcesContent":["import { takeEvery , call , put } from 'redux-saga/effects';\nimport { fetchCollectionsStartAsync } from './shop.action';\nimport ShopActionTypes from './shop.types';\nimport { firestore ,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\n\nimport {\n    fetchCollectionsSuccess,\n    fetchCollectionsFailure\n} from './shop.action';\n\nexport function* fetchCollectionsAsync()\n{\n    yield console.log(\"I am Fired\");\n    try {\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get()\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap , snapshot);\n    }catch(error)\n    {\n\n    }\n\n\n    /* collectionRef.get().then(snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message))); */\n}\n\nexport function* fetchCollectionsStart(){\n    yield (takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync));\n    \n}"]},"metadata":{},"sourceType":"module"}