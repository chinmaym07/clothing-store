{"ast":null,"code":"import _regeneratorRuntime from\"/home/skynet/react-practise/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsAsync),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsStart),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(shopSagas);import{takeLatest,call,put,all}from'redux-saga/effects';import ShopActionTypes from'./shop.types';import{firestore,convertCollectionsSnapshotToMap}from'../../firebase/firebase.utils';import{fetchCollectionsSuccess,fetchCollectionsFailure}from'./shop.action';export function fetchCollectionsAsync(){var collectionRef,snapshot,collectionsMap;return _regeneratorRuntime.wrap(function fetchCollectionsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;collectionRef=firestore.collection('collections');_context.next=4;return collectionRef.get();case 4:snapshot=_context.sent;_context.next=7;return call(convertCollectionsSnapshotToMap,snapshot);case 7:collectionsMap=_context.sent;_context.next=10;return put(fetchCollectionsSuccess(collectionsMap));case 10:_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);_context.next=16;return put(fetchCollectionsFailure(_context.t0.message));case 16:case\"end\":return _context.stop();}}},_marked,null,[[0,12]]);}export function fetchCollectionsStart(){return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync);case 2:case\"end\":return _context2.stop();}}},_marked2);}export function shopSagas(){return _regeneratorRuntime.wrap(function shopSagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(fetchCollectionsStart)]);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["/home/skynet/react-practise/crown-clothing/client/src/redux/shop/shop.sagas.js"],"names":["fetchCollectionsAsync","fetchCollectionsStart","shopSagas","takeLatest","call","put","all","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","collectionRef","collection","get","snapshot","collectionsMap","message","FETCH_COLLECTIONS_START"],"mappings":"iNAUiBA,qB,iDAcAC,qB,iDAMAC,S,EA9BjB,OAASC,UAAT,CAAsBC,IAAtB,CAA6BC,GAA7B,CAAkCC,GAAlC,KAA4C,oBAA5C,CACA,MAAOC,CAAAA,eAAP,KAA4B,cAA5B,CAEA,OAASC,SAAT,CAAoBC,+BAApB,KAA0D,+BAA1D,CAEA,OACIC,uBADJ,CAEIC,uBAFJ,KAGO,eAHP,CAKA,MAAO,SAAUX,CAAAA,qBAAV,2LAGOY,aAHP,CAGuBJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAHvB,iBAIkB,MAAMD,CAAAA,aAAa,CAACE,GAAd,EAAN,CAJlB,OAIOC,QAJP,+BAKwB,MAAMX,CAAAA,IAAI,CAACK,+BAAD,CAAmCM,QAAnC,CAAV,CALxB,OAKOC,cALP,gCAMC,MAAMX,CAAAA,GAAG,CAACK,uBAAuB,CAACM,cAAD,CAAxB,CAAT,CAND,0GAUC,MAAMX,CAAAA,GAAG,CAACM,uBAAuB,CAAC,YAAMM,OAAP,CAAxB,CAAT,CAVD,qEAcP,MAAO,SAAUhB,CAAAA,qBAAV,qJACH,MAAOE,CAAAA,UAAU,CAACI,eAAe,CAACW,uBAAjB,CAAyClB,qBAAzC,CAAjB,CADG,wDAMP,MAAO,SAAUE,CAAAA,SAAV,yIAEH,MAAMI,CAAAA,GAAG,CAAC,CACNF,IAAI,CAACH,qBAAD,CADE,CAAD,CAAT,CAFG","sourcesContent":["import { takeLatest , call , put ,all} from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\n\nimport { firestore ,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\n\nimport {\n    fetchCollectionsSuccess,\n    fetchCollectionsFailure\n} from './shop.action';\n\nexport function* fetchCollectionsAsync()\n{\n    try {\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get()\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap , snapshot);\n        yield put(fetchCollectionsSuccess(collectionsMap));\n\n    }catch(error)\n    {\n        yield put(fetchCollectionsFailure(error.message));\n    }\n}\n\nexport function* fetchCollectionsStart(){\n    yield (takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync));\n    \n}\n\n\nexport function* shopSagas()\n{\n    yield all([\n        call(fetchCollectionsStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}