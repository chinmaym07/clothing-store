{"ast":null,"code":"var _jsxFileName = \"/home/skynet/react-practise/crown-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { SignInContainer, ButtonsContainer, TitleContainer } from './sign-in.styles';\n\nconst SignIn = () => {\n  const [userCredentials, setuserCredentials] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      email,\n      password\n    } = this.state;\n    const {\n      emailSignInStart\n    } = this.props;\n    emailSignInStart(email, password);\n    this.setState({\n      email: '',\n      password: ''\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n    event.preventDefault();\n  };\n\n  const {\n    googleSignInStart\n  } = this.props;\n  return /*#__PURE__*/React.createElement(SignInContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TitleContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Sign In with email & password \"), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    method: \"post\",\n    onSubmit: this.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    value: this.state.email,\n    required: true,\n    label: \"Email\",\n    handleChange: this.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    value: this.state.password,\n    required: true,\n    label: \"Password\",\n    handleChange: this.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ButtonsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"SIGN IN\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"Sign In With Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/skynet/react-practise/crown-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","googleSignInStart","emailSignInStart","FormInput","CustomButton","connect","SignInContainer","ButtonsContainer","TitleContainer","SignIn","userCredentials","setuserCredentials","email","password","handleSubmit","event","preventDefault","state","props","setState","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React , {useState} from 'react';\nimport { googleSignInStart , emailSignInStart } from '../../redux/user/user.actions';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport {connect} from 'react-redux';\nimport {\n    SignInContainer,\n    ButtonsContainer,\n    TitleContainer\n    } from './sign-in.styles';  \n\nconst SignIn = () => {\n    const [userCredentials , setuserCredentials] = useState({email:'' , password:''});\n\n    const handleSubmit= async (event) =>{\n        event.preventDefault();\n\n        const {email , password} = this.state;\n        const {emailSignInStart} = this.props;\n        \n        emailSignInStart(email ,password);\n        this.setState({email:'', password:''});\n    }\n\n    const handleChange = (event) => {\n        \n        const {value , name} = event.target;\n        this.setState({[name] : value});\n        event.preventDefault();\n    }\n        const {googleSignInStart} = this.props;\n        return (\n            <SignInContainer>\n                <TitleContainer>I already have an account</TitleContainer>\n                <span>Sign In with email & password </span>\n                \n                <form action=\"\" method=\"post\" onSubmit={this.handleSubmit}>\n                    \n                    <FormInput type=\"email\" id=\"email\" name=\"email\"  value={this.state.email} required label=\"Email\" handleChange={this.handleChange} />\n                    <FormInput type=\"password\" name=\"password\" id=\"password\" value={this.state.password} required label=\"Password\" handleChange={this.handleChange}/>\n                    <ButtonsContainer>\n                        <CustomButton type=\"submit\">SIGN IN</CustomButton>\n                        <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn >\n                            \n                            Sign In With Google\n                        </CustomButton>\n                    </ButtonsContainer>\n                </form>\n                \n            </SignInContainer>\n            )\n    }\n\nconst mapDispatchToProps = dispatch =>({\n    googleSignInStart:() => dispatch(googleSignInStart()),\n    emailSignInStart:(email , password) => dispatch(emailSignInStart({email , password}))\n})\n\n\n    export default connect(null , mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}